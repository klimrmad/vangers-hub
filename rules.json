{
  "rules": {
    "game":   {
      "$gameID": {
        ".read":     "auth != null",
        ".write":    "auth != null && (auth.uid == data.child('server').val() || auth.uid == newData.child('server').val())",
        ".validate": "$gameID.matches(/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/)",

        "server":    { ".validate": "newData.val() == auth.uid" },
        "title":     { ".validate": "newData.isString()" },
        "type":      { ".validate": "newData.isString()" },
        "mod":       { ".validate": "newData.isString()" },
        "started":   { ".validate": "newData.isBoolean()" },
        "created":   {
          ".validate": "newData.isString() && newData.val().matches(/^(20[0-9]{2})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[123]):([0-5][0-9]):([0-5][0-9])([+-]([01][0-9]|2[0-3]):[0-5][0-9]|Z)$/)"
        },
        "updated":   {
          ".validate": "newData.isString() && newData.val().matches(/^(20[0-9]{2})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[123]):([0-5][0-9]):([0-5][0-9])([+-]([01][0-9]|2[0-3]):[0-5][0-9]|Z)$/)"
        },
        "players":   {
          "$playerID": {
            ".validate": true,
            "rating":    { ".validate": "newData.isNumber()" },
            "$other":    { ".validate": false }
          }
        },

        "$other":    { ".validate": false }
      }
    },

    "server": {
      "$serverID": {
        ".read":   "auth != null",
        ".write":  "auth != null && auth.uid == $serverID",

        "title":   { ".validate": "newData.isString()" },
        "host":    { ".validate": "newData.isString()" },
        "port":    { ".validate": "newData.isNumber() && newData.val() > 0" },
        "version": { ".validate": "newData.isString()" },
        "updated": {
          ".validate": "newData.isString() && newData.val().matches(/^(20[0-9]{2})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[123]):([0-5][0-9]):([0-5][0-9])([+-]([01][0-9]|2[0-3]):[0-5][0-9]|Z)$/)"
        },
        "compat":  {
          ".validate": true,
          "v":         { ".validate": "newData.isString()" },
          "m":         { ".validate": "newData.isString()" },
          "cx":        { ".validate": "newData.isString()" },
          "$other":    { ".validate": false }
        },

        "$other":  { ".validate": false }
      }
    }
  }
}